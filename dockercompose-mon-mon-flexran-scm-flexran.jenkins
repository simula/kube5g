/*
#! /bin/groovy
########################################################################################################################
# Licensed to the Mosaic5G under one or more contributor license agreements. See the NOTICE file distributed with this
# work for additional information regarding copyright ownership. The Mosaic5G licenses this file to You under the
# Apache License, Version 2.0  (the "License"); you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#   
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
#   an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the
#   specific language governing permissions and limitations under the License.
########################################################################################################################
# file          flexran/docker-compose-1mm.jenkinsfile
# brief         Docker compose for the monolithic RAN and core and FlexRAN.
# authors       Alireza Mohammadi (C) - 2020 alireza.mohammadi@eurecom.fr
#               Osama Arouk (C) - 2020 osama.arouk@eurecom.fr
*/

// TODO: Add the parameters for ease of edit and access
def pipelineContext = [:] // Parameters will go here

pipeline {
    // Here we define the node that will run this script using the labels assigned to them previously
    agent { 
        node { 
            label 'cigarier'
        } 
    }

    // The pipeline will contain a set of stages grouped here, that will run sequentially
    // Each stage itself contains a sequence of steps that may contain some scripts to run
    stages {
        stage('Clone') {
            steps {
                checkout scm
            }
        }
         // STAGE 1: COMPOSE PREPARE
        stage('compose-prepare') {
            steps {
                // echo "STAGE #1: create the directory dockercompose-test to get the project from git"
                // sh 'mkdir -p dockercompose-test'
                // dir("dockercompose-test")
                // {
                //     // Get the files from the GitLab
                //     git credentialsId: 'mosaic5g_jenkins',
                //         url: 'git@gitlab.eurecom.fr:mosaic5g/kube5g.git',
                //         branch: 'develop'
                //     echo "STAGE #1 Getting project from gitlab successfully"
                // }
                
                // Change the directory to configure docker compose files for testing phase
                dir('common/config-manager'){
                    script{
                        sh(
                            label: 'Configure docker compose for testing phase',
                            script: '''
                                ./conf-manager.py -s conf_short_default.yaml -t flexran
                            '''
                        )
                    }
                }
                ////////////////////////////////////////////////////////////////////////////////
                // Change the directory to an specific one for the compose
                dir('dockers/docker-compose/oai-v1/lte-all-in-one-with-flexran'){
                    script{
                        try{
                            // Remove the docker-compose if available
                            echo "Remove the docker-compose"
                            sh(
                                label: 'remove the docker compose if it is previously deployed',
                                script: '''
                                    docker-compose down
                                '''
                            )
                        } catch (err) {
                            error("Failed to finish the stage #1. Check the docker compse.")
                        }
                    }
                }
                ////////////////////////////////////////////////////////////////////////////////
                echo "STAGE #1 OUTPUT SUCCESS"
            }
        }
        
        // STAGE 2: DOCKER COMPOSE
        stage('compose-up') {
            steps {
                echo "STAGE #2: Build the docker hook"

                // Change the directory to an specific one for the compose
                // TODO: Use parameters for the directory naming
                dir('dockers/docker-compose/oai-v1/lte-all-in-one-with-flexran'){
                    script{
                        try{
                            // Setup the docker-compse
                            echo "Running the docker-compose"
                            sh(
                                label: 'setup the docker-compose',
                                script: '''
                                    docker-compose up -d
                                '''
                            )
                        } catch (err) {
                            error("Failed to finish the stage #2. Check the YAML file.")
                        }   
                    }
                }

                echo "STAGE #2 OUTPUT SUCCESS"
            }
        }
        
    // }
    ////////////////////////////////////////////////////////////////////////////////////
    // stages {
        // STAGE 3 DOCKER COMPOSE TEST
        stage('compose-test') {
            steps {
                echo "STAGE #3: Test the docker-compose"

                // Change the directory to an specific one for the compose
                dir('dockers/docker-compose/oai-v1/lte-all-in-one-with-flexran'){
                    script{
                        try{
                            // List and check the containers and snaps
                            echo "Listing the containers and snaps"
                            sh(
                                label: 'list the docker containers to see the deployed networks',
                                script: '''
                                    # Sleep  for 10 seconds to make sure that the network is up
                                    sleep 10
                                    docker ps
                                    docker network ls
                                    
                                    cmd="snap list"
                                    cmd_info_cn="snap info oai-cn"
                                    cmd_info_ran="snap info oai-ran"
                                    cmd_info_flexran="snap info flexran"
                    
                                    docker exec oaicn $cmd
                                    docker exec oaicn $cmd_info_cn

                                    docker exec oairan $cmd
                                    docker exec oairan $cmd_info_ran

                                    docker exec flexran $cmd
                                    docker exec flexran $cmd_info_flexran
                                '''
                            )
                        } catch (err){
                            error("Failed to finish the stage #1. Check the modules.")
                        }
                    }
                }

                echo "STAGE #1 OUTPUT SUCCESS"
            }
        }
        
        // STAGE 2: DOCKER COMPOSE
        stage('compose-unit') {
            steps {
                echo "STAGE #2: Perform a unit test"

                script{
                    try{
                        // Snap unit check
                        echo "Snap unit check"
                        sh(
                            label: 'flexran snap unit check',
                            script: '''
                                docker exec flexran flexran.check
                            '''
                        )
                    } catch (err) {
                        error("Failed to finish stage #2. Snap unit test failed.")
                    }
                }

                git credentialsId: 'mosaic5g_jenkins',
                    url: 'git@gitlab.eurecom.fr:mosaic5g/store.git',
                    branch: 'jenkins'
                
                // Change the directory to an specific one for the scripts
                // TODO: Use parameters for the directory naming
                dir('ci-scripts/unit-test/flexran'){
                    script{
                        try{
                            // Unit test script
                            echo "Unit test script"
                            sh(
                                label: 'flexran unit test script',
                                script: '''
                                    ./unit-flexran.sh
                                '''
                            )
                        } catch (err) {
                            error("Failed to finish the stage #2. Check the script output.")
                        }
                    }
                }

                echo "STAGE #2 OUTPUT SUCCESS"
            }
        }
        
        // STAGE 3: DOCKER COMPOSE CLEAN
        stage('compose-clean') {
            steps {
                echo "STAGE #3: Rollback the docker-compse"

                // Change the directory to an specific one for the compose
                dir('dockers/docker-compose/oai-v1/lte-all-in-one-with-flexran'){
                    script{
                        try{
                            // Rollback
                            echo "Shutting down the docker-compose"
                            sh(
                                label: 'list the docker containers to see the deployed networks',
                                script: '''
                                    docker-compose down
                                '''
                            )
                        } catch (err){
                            error("Failed to finish the stage #3. Check the docker-compose")
                        }
                    }
                }

                echo "STAGE #3 OUTPUT SUCCESS"
            }
        }
    }
    ////////////////////////////////////////////////////////////////////////////////////
}


