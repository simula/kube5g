/*
#!/bin/groovy
*/

// TODO: Add the parameters for ease of edit and access
def pipelineContext = [:] // Parameters will go here

// Name of the snap to build; oai-ran, oai-hss, oai-mme, flexran, etc.
def snapName = "" // params.snapName
// This is related to oai-cn versions: v1 and v2
def oaiSnapVersion = "v1" // params.oaiSnapVersion

// snapcraft channel to which the snap will be pushed for testing it later. This channel is ONLY for testing (i.e., private channel)
def snapChannelCicd = "stable/ci"// snapChannelCicd
// snapcraft channel to which the finall version of snap will be pushed. This is the public channel (i.e., private channel)
def snapChannel = "stable" // params.snapChannel


def dockerImageTagCicdV1 = 'v1-1.0-cicd'
def dockerImageTagCicdV2 = 'v2-1.0-cicd'
def dockerRegisteryCicd = 'localhost:5000'

def dockerImageTagV1 = 'v1-1.0-'
def dockerImageTagV2 = 'v2-1.0-'
def dockerRegister = 'mosaic5gecosys'

// Credentials
def gitlabCredentials   = 'mosaic5g_jenkins'
// Node label on which the current pipeline will be executed
// def nodeExecutor = params.nodeExecutor
def nodeExecutor = 'cigarier'//params.nodeExecutor

def snapName = "flexran"
pipeline {
    agent {
        node {
            label nodeExecutor
        }
    }

    environment {
        SNAP_NAME = "${snapName}"
        SNAP_VERSION = "${oaiSnapVersion}"
        // For CICD
        SNAP_CHANNEL_CICD       = "${snapChannelCicd}"
        DOCKER_IMAGE_TAG_V1_CICD= "${dockerImageTagCicdV1}"
        DOCKER_IMAGE_TAG_V2_CICD= "${dockerImageTagCicdV2}"
        DOCKER_REGISTRY_CICD    = "${dockerRegisteryCicd}"
        // For stabel channels: snap and docker
        SNAP_CHANNEL            = "${snapChannel}"
        DOCKER_IMAGE_TAG_V1     = "${dockerImageTagV1}${currentBuild.number}"
        DOCKER_IMAGE_TAG_V2     = "${dockerImageTagV2}${currentBuild.number}"
        DOCKER_REGISTRY         = "${dockerRegister}"  
    }

    stages {
        // Trigget pipeline for FlexRAN
        stage('trigger-flexran') {
            when { 
                allOf {
                    // branch 'develop'
                    changeset "snaps/flexran/**"
                    // expression {  // there are changes in some-directory/...
                    //     sh(returnStatus: true, script: 'git diff  origin/master --name-only | grep --quiet "^some-directory/.*"') == 0
                    // }
                    // expression {   // ...and nowhere else.
                    //     sh(returnStatus: true, script: 'git diff origin/master --name-only | grep --quiet --invert-match "^some-directory/.*"') == 1
                    // }
                }
            }
            environment {
                SNAP_NAME = "flexran"
                SNAP_VERSION = "v1" 
            }
            steps {
                script{
                    echo 'Trriget CICD for FlexRAN'
                    build job:'e2e-cd-final' , parameters:[
                        string(name: 'snapName',value: env.SNAP_NAME)
                        string(name: 'oaiSnapVersion',value: env.SNAP_VERSION)
                        string(name: 'snapChannelCicd',value: env.SNAP_CHANNEL_CICD)
                        string(name: 'dockerImageTagCicdV1',value: env.DOCKER_IMAGE_TAG_V1_CICD)
                        string(name: 'dockerImageTagCicdV2',value: env.DOCKER_IMAGE_TAG_V2_CICD)
                        string(name: 'DOCKER_REGISTRY_CICD',value: env.dockerRegisteryCicd)
                        string(name: 'snapChannel',value: env.SNAP_CHANNEL)
                        string(name: 'dockerImageTagV1',value: env.DOCKER_IMAGE_TAG_V1)
                        string(name: 'dockerImageTagV2',value: env.DOCKER_IMAGE_TAG_V2)
                        string(name: 'dockerRegister',value: env.DOCKER_REGISTRY)
                        // booleanParam(name: 'keyNameOfParam2',value:'valueNameOfParam2')
                    ], wait: false
                }
            }
        }
        // 
        // Trigget pipeline for FlexRAN
        stage('trigger-oairan') {
            when { 
                allOf {
                    // branch 'develop'
                    changeset "snaps/oai-ran/**"
                    // expression {  // there are changes in some-directory/...
                    //     sh(returnStatus: true, script: 'git diff  origin/master --name-only | grep --quiet "^some-directory/.*"') == 0
                    // }
                    // expression {   // ...and nowhere else.
                    //     sh(returnStatus: true, script: 'git diff origin/master --name-only | grep --quiet --invert-match "^some-directory/.*"') == 1
                    // }
                }
            }
            environment {
                SNAP_NAME = "oai-ran"
                SNAP_VERSION = "v1" 
            }
            steps {
                script{
                    echo 'Trriget CICD for FlexRAN'
                    build job:'e2e-cd-final' , parameters:[
                        string(name: 'snapName',value: env.SNAP_NAME)
                        string(name: 'oaiSnapVersion',value: env.SNAP_VERSION)
                        string(name: 'snapChannelCicd',value: env.SNAP_CHANNEL_CICD)
                        string(name: 'dockerImageTagCicdV1',value: env.DOCKER_IMAGE_TAG_V1_CICD)
                        string(name: 'dockerImageTagCicdV2',value: env.DOCKER_IMAGE_TAG_V2_CICD)
                        string(name: 'DOCKER_REGISTRY_CICD',value: env.dockerRegisteryCicd)
                        string(name: 'snapChannel',value: env.SNAP_CHANNEL)
                        string(name: 'dockerImageTagV1',value: env.DOCKER_IMAGE_TAG_V1)
                        string(name: 'dockerImageTagV2',value: env.DOCKER_IMAGE_TAG_V2)
                        string(name: 'dockerRegister',value: env.DOCKER_REGISTRY)
                        // booleanParam(name: 'keyNameOfParam2',value:'valueNameOfParam2')
                    ], wait: false
                }
            }
        }
        // 
    }
}