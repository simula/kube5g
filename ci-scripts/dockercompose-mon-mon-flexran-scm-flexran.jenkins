/*
#!/bin/groovy
################################################################################
* Copyright 2019-2020 Eurecom and Mosaic5G Platforms Authors
* Licensed to the Mosaic5G under one or more contributor license
* agreements. See the NOTICE file distributed with this
* work for additional information regarding copyright ownership.
* The Mosaic5G licenses this file to You under the
* Apache License, Version 2.0  (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
################################################################################
#-------------------------------------------------------------------------------
# file          dockercompose-mon-mon-flexran-scn-flexran.jenkins
# brief         Docker compose for the monolithic RAN and CN and FlexRAN
# contact       admin@mosaic-5g.io
# authors:
	- Osama Arouk (arouk@eurecom.fr)
	- Alireza Mohammadi (alireza.mohammadi@eurecom.fr)
*-------------------------------------------------------------------------------
*/

// TODO: Add the parameters for ease of edit and access
def pipelineContext = [:] // Parameters will go here

pipeline {
    // Here we define the node that will run this script using the labels assigned to them previously
    agent { 
        node { 
            label 'cigarier'
        } 
    }

    // The pipeline will contain a set of stages grouped here, that will run sequentially
    
    stages {
        // STAGE #1: Clone the project from git using source control management (scm)
        stage('Clone') {
            steps {
                checkout scm
            }
        }
        // STAGE #2: Prepare docker-compose 
        stage('compose-prepare') {
            steps {
                echo "STEP #2.1 Configure Kube5G for testing phase"
                dir('common/config-manager'){
                    script{
                        sh(
                            label: 'Configure docker compose for testing phase',
                            script: '''
                                ./conf-manager.py -s conf_short_default.yaml -t flexran
                            '''
                        )
                    }
                }
                echo "STEP #2.2 bring the network down if it is already up"
                dir('dockers/docker-compose/oai-v1/lte-all-in-one-with-flexran'){
                    script{
                        try{
                            // Remove the docker-compose if available
                            echo "Remove the docker-compose"
                            sh(
                                label: 'remove the docker compose if it is previously deployed',
                                script: '''
                                    docker-compose down
                                '''
                            )
                        } catch (err) {
                            error("Failed to finish the stage #1. Check the docker compse.")
                        }
                    }
                }
                echo "STAGE #2 OUTPUT SUCCESS"
            }
        }
        
        // STAGE #3: DOCKER COMPOSE
        stage('compose-up') {
            steps {
                echo "STEP #3.1 Build the docker hook"
                // Change the directory to an specific one for the compose
                dir('dockers/docker-compose/oai-v1/lte-all-in-one-with-flexran'){
                    script{
                        try{
                            // Setup the docker-compse
                            echo "Running the docker-compose"
                            sh(
                                label: 'setup the docker-compose',
                                script: '''
                                    docker-compose up -d
                                '''
                            )
                        } catch (err) {
                            error("Failed to finish the stage #2. Check the YAML file.")
                        }   
                    }
                }

                echo "STAGE #3 OUTPUT SUCCESS"
            }
        }
        
        // STAGE #3: DOCKER COMPOSE TEST
        stage('compose-test') {
            steps {
                echo "STEP #3.1 Test lte with flexran network"
                // Change the directory to an specific one for the compose
                dir('dockers/docker-compose/oai-v1/lte-all-in-one-with-flexran'){
                    script{
                        try{
                            // List and check the containers and snaps
                            echo "Listing the containers and snaps"
                            sh(
                                label: 'list the docker containers to see the deployed networks',
                                script: '''
                                    # Sleep  for 10 seconds to make sure that the network is up
                                    sleep 10
                                    docker ps
                                    docker network ls
                                    
                                    cmd="snap list"
                                    cmd_info_cn="snap info oai-cn"
                                    cmd_info_ran="snap info oai-ran"
                                    cmd_info_flexran="snap info flexran"
                    
                                    docker exec oaicn $cmd
                                    docker exec oaicn $cmd_info_cn

                                    docker exec oairan $cmd
                                    docker exec oairan $cmd_info_ran

                                    docker exec flexran $cmd
                                    docker exec flexran $cmd_info_flexran
                                '''
                            )
                        } catch (err){
                            error("Failed to finish the stage #1. Check the modules.")
                        }
                    }
                }

                echo "STAGE #3 OUTPUT SUCCESS"
            }
        }
        
        // STAGE #4: DOCKER COMPOSE
        stage('compose-unit') {
            steps {
                echo "STEP #4.1: Perform flexran check"
                script{
                    try{
                        // Snap unit check
                        echo "Snap unit check"
                        sh(
                            label: 'flexran snap unit check',
                            script: '''
                                docker exec flexran flexran.check
                            '''
                        )
                    } catch (err) {
                        error("Failed to finish stage #2. Snap unit test failed.")
                    }
                }
                
                // Change the directory to an specific one for the scripts
                echo "STEP #4.2: Perform a unit test of flexran"
                dir('ci-scripts/unit-test/flexran'){
                    script{
                        try{
                            // Unit test script
                            echo "Unit test script"
                            sh(
                                label: 'flexran unit test script',
                                script: '''
                                    ./unit-flexran.sh
                                '''
                            )
                        } catch (err) {
                            error("Failed to finish the stage #2. Check the script output.")
                        }
                    }
                }

                echo "STAGE #4 OUTPUT SUCCESS"
            }
        }
        
        // STAGE 5: DOCKER COMPOSE CLEAN
        stage('compose-clean') {
            steps {
                echo "STEP #5.1: Rollback the docker-compse"
                // Change the directory to an specific one for the compose
                dir('dockers/docker-compose/oai-v1/lte-all-in-one-with-flexran'){
                    script{
                        try{
                            // Rollback
                            echo "Shutting down the docker-compose"
                            sh(
                                label: 'list the docker containers to see the deployed networks',
                                script: '''
                                    docker-compose down
                                '''
                            )
                        } catch (err){
                            error("Failed to finish the stage #3. Check the docker-compose")
                        }
                    }
                }

                echo "STAGE #5 OUTPUT SUCCESS"
            }
        }
    }
}

